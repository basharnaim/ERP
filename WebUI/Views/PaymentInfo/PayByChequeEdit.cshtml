@model Library.ViewModel.Inventory.Accounts.PaymentInfoViewModel
@using ERP.WebUI.Html
@{
    ViewBag.Title = "PayByChequeEdit";
}
<div class="row">
    <div class="col-xl-12">
        <a href="/PaymentInfo/PayIndex" class="btn btn-bg pull-right top-button-back" role="button">Back</a>
        <h4 class="page-header">Pay By Cheque Information</h4>
    </div>
</div>
@using (Ajax.BeginForm("PayByChequeEdit", "PaymentInfo", null, new AjaxOptions { HttpMethod = "POST" }, new { id = "DialogForm" }))
{
    @Html.HiddenFor(m => m.CompanyId)
    @Html.HiddenFor(m => m.BranchId)
    @Html.HiddenFor(m => m.Id)
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label   ">Track No</label>
                @Html.TextBoxFor(model => model.TrackingNo, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group">
                <label class="control-label   ">Supplier</label>
                @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-control", @readonly = "readonly" })
                @Html.HiddenFor(model => model.SupplierId)
            </div>
            <div class="form-group">
                <label class="control-label   " title="Payment type">Pay Type</label>
                @Html.TextBoxFor(model => model.TransactionType, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.TransactionType, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label   mendatory" title="Payable Amount">Amount</label>
                @Html.TextBoxFor(model => model.Amount, new { @class = "debitAmount form-control", Value = String.Format("{0:0.00}", Model.Amount), onClick = "this.select()" })
                @Html.ValidationMessageFor(model => model.Amount, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label  " title="Advance Amount">Advance</label>
                @Html.TextBoxFor(model => model.AdvanceAmount, new { @class = "advanceAmount form-control", @readonly = "readonly", Value = String.Format("{0:0.00}", Model.AdvanceAmount) })
            </div>
            <div class="form-group">
                <label class="control-label   mendatory">Bank</label>
                @Html.SimpleDropDownFor(model => model.BankId, "/Bank/GetBankList/", new { @class = "form-control", placeholder = "--Select--" })
            </div>
            <div class="form-group">
                <label class="control-label   mendatory ">Account No</label>
                @Html.CascadingDropDownFor(model => model.AccountNo, "/BankMaster/GetAccountNoList?bankBranchId=", "BankBranchId", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountNo, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label   mendatory">Cheque No</label>
                @Html.TextBoxFor(model => model.ChequeNo, new { @class = "chequeNo form-control" })
                @Html.ValidationMessageFor(model => model.ChequeNo, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label  " title="Reference No">Ref. No</label>
                @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "creditAmount form-control" })
                @Html.ValidationMessageFor(model => model.InvoiceNo, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label  " title="Due Amount">Due Amount</label>
                @Html.TextBoxFor(model => model.DueAmount, new { @class = "creditAmount form-control", @readonly = "readonly", Value = String.Format("{0:0.00}", Model.DueAmount) })
            </div>
            <div class="form-group">
                <label class="control-label   mendatory ">Bank Branch</label>
                @Html.CascadingDropDownFor(model => model.BankBranchId, "/BankBranch/GetBankBranchList?bankId=", "BankId", new { @class = "form-control", placeholder = "--Select--" })
                @Html.ValidationMessageFor(model => model.BankBranchId, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                 <label class="control-label  mendatory" title="Transaction Date">Transaction Date</label>
                @Html.DatePickerFor(model => model.TransactionDate, new { @class = "ignore form-control" })
            </div>
            <div class="form-group">
                <label class="control-label   mendatory" title="Particular">Particular</label>
                @Html.TextAreaFor(model => model.Particulars, new { @class = "creditAmount form-control" })
                @Html.ValidationMessageFor(model => model.Particulars, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-12">
            <div class="form-group text-right">
                <div class="col-xl-12">
                    <button type="submit" class="btn btn-bg btn_save">Save</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
        });

        function payment(ptype) {
            $("#Cash").fadeOut();
            $("#Cheque").fadeOut();
            procedure(ptype);
        };

        function procedure(ptype) {
            if (ptype == 'Cheque') {
                $("#Cheque").delay(500).fadeIn();
            }

            else if (ptype == 'Cheque') {
                $("#Cheque").delay(500).fadeIn();
            }
        }
    </script>
}
