@model IEnumerable<Library.ViewModel.Inventory.Products.ProductStockViewModel>
@using ERP.WebUI.Html
@{
    ViewBag.Title = "Index";
}
<div class="row">
    <div class="col-lg-12">
        <a href="/APanel/Home" class="btn btn-bg pull-right top-button-back" role="button">Back</a>
        <h4 class="page-header">Product Information</h4>
    </div>
</div>
@using (Html.BeginForm("ProductStockList", "SuperShopProduct", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   mendatory">Company</label>
                @Html.SimpleDropDown("companyId", "/APanel/Company/GetCompanyList/", new { @class = "form-control", data_val = "true", data_val_required = "Company is required" })
                @Html.ValidationMessage("companyId", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">Branch</label>
                @Html.CascadingDropDown("branchId", "/APanel/Branch/GetBranchList?id=", "companyId", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">Category</label>
                @Html.SimpleDropDown("productCategoryId", "/APanel/ProductCategory/GetProductCategoryList/", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">Sub Category</label>
                @Html.CascadingDropDown("productSubCategoryId", "/APanel/ProductSubCategory/GetProductSubCategoryList?productCategoryId=", "productCategoryId", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label ">Product</label>
                @Html.SimpleDropDown("productId", "/APanel/ProductMaster/GetProductList", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label>Bar Code</label>
                <input id="productcode" name="productcode" class="form-control" type="text" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">Supplier</label>
                @Html.SimpleDropDown("supplierId", "/APanel/Supplier/GetSupplierList/", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label " title="From date">From date</label>
                @Html.DatePicker("dateFrom", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">To date</label>
                @Html.DatePicker("dateTo", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group ">
                <div class="submit-button">
                    <button type="submit" class="btn btn-bg">Show</button>
                    @Html.ActionLink("Report", "RdlcProductStockList", "SuperShopProduct", new { target = "_blank", id = "btnReport", @class = "btn btn-bg pull-middle" })
                    <input type="button" value="Clear" class="btn btn-warning" id="btnClear" />
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                        <thead class="thead-heading">
                            <tr>
                                <th>Code</th>
                                <th>Product Name</th>
                                <th>UOM</th>
                                <th>Rack Name</th>
                                <th>Purchase Price</th>
                                <th>Sales Price</th>
                                <th>Stock</th>
                                <th>Purchase Value</th>
                                <th>Sales Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var item in Model)
                                {
                                    item.ProductSaleValue = item.ProductStock * item.RetailPrice;
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ProductCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ProductName)
                                        </td>
                                        <td class="text-center">
                                            @Html.DisplayFor(modelItem => item.UOMName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.RackName)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.PurchasePrice)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.RetailPrice)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.ProductStock)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.ProductStockValue)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.ProductSaleValue)
                                        </td>
                                    </tr>
                                }

                            }
                        </tbody>
                        <tfoot>
                            @if (Model != null && Model.Any())
                            {
                                <tr class="text-right font-bold">
                                    <td colspan="6">Total:</td>
                                    <td>@Html.Raw(Model.Sum(x => Math.Round(x.ProductStock, 2)))</td>
                                    <td>@Html.Raw(Model.Sum(x => Math.Round(x.ProductStockValue, 2)))</td>
                                    <td>@Html.Raw(Model.Sum(x => Math.Round(x.ProductSaleValue, 2)))</td>
                                </tr>
                            }
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            var dateFrom = getUrlVars()["dateFrom"];
            $("#dateFrom").val(dateFrom);
            var dateTo = getUrlVars()["dateTo"];
            $("#dateTo").val(dateTo);
        });

        $("#btnReport").click(function () {

            var companyId = $('#companyId').val();
            var branchId = $('#branchId').val();
            //alert(companyId);
            if (companyId == '' && branchId == null || branchId =='') {
                alert('Please Select Company Name and Branch Name');
                return false;
            } else {
                var productCategoryId = $('#productCategoryId').val();
                var productSubCategoryId = $('#productSubCategoryId').val();
                var productId = $('#productId').val();
                var productcode = $('#productcode').val();
                var supplierId = $('#supplierId').val();
                var dateFrom = $('#dateFrom').val();
                var dateTo = $('#dateTo').val();

                this.href = this.href.split('?')[0] + '?companyId=' + companyId
                    + '&branchId=' + branchId
                    + '&productCategoryId=' + productCategoryId
                    + '&productSubCategoryId=' + productSubCategoryId
                    + '&productId=' + productId
                    + '&productcode=' + productcode
                    + '&supplierId=' + supplierId
                    + '&dateFrom=' + dateFrom
                    + '&dateTo=' + dateTo;
            }
        });

        $("#btnClear").on("click", function () {
            $("#companyId").val('').trigger("change");
            $("#branchId").val('').trigger("change");
            $("#supplierId").val('').trigger("change");
            $("#itemCategoryId").val('').trigger("change");
            $("#productcode").val('');
            $("#productId").val('').trigger("change");

            $("#itemSubCategoryId").val('').trigger("change");
            $("#dateFrom").val('').trigger("change");
            $("#dateTo").val('').trigger("change");
        });

    </script>
}

