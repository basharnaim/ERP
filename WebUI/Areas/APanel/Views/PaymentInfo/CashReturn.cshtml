@model Library.ViewModel.Inventory.Accounts.PaymentInfoViewModel
@using ERP.WebUI.Html
@{
    ViewBag.Title = "CashReturn";
}
<div class="row">
    <div class="col-xl-12">
        <div class="d-flex justify-content-end border-bottom pb-1">
            <a href="/APanel/PaymentInfo/ReceiveIndex" class="btn btn-bg" role="button">Back</a>
        </div>
    </div>
</div>
@using (Html.BeginForm("CashReturn", "PaymentInfo", FormMethod.Get, new { id = "SearchForm" }))
{
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">Company</label>
                @Html.SimpleDropDown("companyId", "/APanel/Company/GetCompanyList/", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label   ">Branch</label>
                @Html.CascadingDropDown("branchId", "/APanel/Branch/GetBranchList?id=", "companyId", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label  " title="Customer name">Customer</label>
                @Html.CascadingDropDown("cstmrId", "/APanel/Customer/GetCustomerListByBranch?branchId=","branchId", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="control-label  ">Phone</label>
                @Html.TextBox("phone", null, new { autofocus = "", @class = "form-control", tabindex = "1" })
            </div>
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <div class="form-group">
                <button type="submit" class="btn btn-bg ml-1 mr-1">Show</button>
                <input type="button" value="Clear" class="btn btn-warning ml-1 mr-1" id="btnClear" />
            </div>
        </div>
    </div>
}
@using (Ajax.BeginForm("CashReturn", "PaymentInfo", null, new AjaxOptions { HttpMethod = "POST" }, new { id = "DialogForm" }))
{
    @Html.HiddenFor(m => m.CompanyId)
    @Html.HiddenFor(m => m.BranchId)
    <div class="row ">
        <div class="col-xl-12">
            <div class="card ">
                <div class="card-header CashReturn_tittle">Receive By Cash Information</div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label   ">Track No</label>
                                @Html.TextBoxFor(model => model.TrackingNo, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                <label class="control-label  " title="Advance Amount">Advance</label>
                                @Html.TextBoxFor(model => model.AdvanceAmount, new { @class = "creditAmount form-control", @readonly = "readonly", Value = String.Format("{0:0.00}", Model.AdvanceAmount) })
                            </div>
                            <div class="form-group">
                                <label class="control-label   " title="Payment type">Pay Type</label>
                                @Html.TextBoxFor(model => model.TransactionType, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.TransactionType, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label class="control-label  mendatory" title="Transaction Date">Transaction Date</label>
                                @Html.DatePickerFor(model => model.TransactionDate, new { @autocomplete = "off", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TransactionDate, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label   ">Customer</label>
                                @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @readonly = "readonly" })
                                @Html.HiddenFor(model => model.CustomerId)
                            </div>
                            <div class="form-group">
                                <label class="control-label   mendatory" title="Payable Amount">Amount</label>
                                @Html.TextBoxFor(model => model.Amount, new { @class = "creditAmount form-control", Value = String.Format("{0:0.00}", Model.Amount), onClick = "this.select()" })
                                @Html.ValidationMessageFor(model => model.Amount, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label class="control-label  " title="Reference No">Ref. No</label>
                                @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "creditAmount form-control" })
                                @Html.ValidationMessageFor(model => model.InvoiceNo, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label  " title="Due Amount">Due Amount</label>
                                @Html.TextBoxFor(model => model.DueAmount, new { @class = "creditAmount form-control", @readonly = "readonly", Value = String.Format("{0:0.00}", Model.DueAmount) })
                            </div>
                            <div class="form-group">
                                <label class="control-label   mendatory" title="Particular">Particular</label>
                                @Html.TextAreaFor(model => model.Particulars, new { @class = "creditAmount form-control" })
                                @Html.ValidationMessageFor(model => model.Particulars, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsDiscount, new { @class = "control-label  " })
                                <label>
                                    @Html.CheckBoxFor(model => model.IsDiscount)
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-12">
            <div class="form-group text-right">
                <div class="col-xl-12">
                    <button type="submit" class="btn btn-bg pull-right">Save</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {
    });

    $("#SearchForm").on("submit", function () {
        if ($("#companyId").val() == "") {
            ShowResult("Please select a company.", "failure");
            return false;
        }
        if ($("#branchId").val() == "") {
            ShowResult("Please select a branch.", "failure");
            return false;
        }
        if ($("#cstmrId").val() == null && $("#phone").val() == "") {
            ShowResult("Please select a customer.", "failure");
            return false;
        }
    });


    $("#btnClear").on("click", function () {
        $("#phone").val('').trigger("change");
        $("#customerId").val('').trigger("change");
        $("#companyId").val('').trigger("change");
        $("#branchId").val('').trigger("change");
    });
</script>
}
