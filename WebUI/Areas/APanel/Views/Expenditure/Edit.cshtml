@model Library.ViewModel.Inventory.Expenditures.ExpenditureViewModel
@using ERP.WebUI.Html
@{
    ViewBag.Title = "Edit";
}
@*<div class="row">
        <div class="col-xl-12">
            <a href="/APanel/Expenditure" class="btn btn-bg pull-right top-button-back" role="button">Back</a>
            <h4 class="page-header">Update Expenditure</h4>
        </div>
    </div>*@
@using (Ajax.BeginForm("Edit", "Expenditure", null, new AjaxOptions { HttpMethod = "POST" }, new { id = "DialogForm" }))
{
    <div class="card ">
        <div class="card-header Warehouse_tittle alert-info ">
            Update Expenditure
            <a href="/APanel/Expenditure" class="btn btn-bg btn-sm pull-right" role="button"><i class="fa fa-undo"></i> Back</a>
        </div>
        <div class="card-body">
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <div class="col-3">
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Sequence, new { @class = "control-label   mendatory" })
                            @Html.ValidationMessageFor(model => model.Sequence, null, new { @class = "text-danger" })
                        </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, new { @class = "control-label   mendatory" })
                        @Html.TextBoxFor(model => model.Code, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.Code, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label class="control-label   " title="Expenditure Subsidiary Category">S.Category</label>
                        @Html.CascadingDropDownFor(model => model.ExpenditureSubsidiaryCategoryId, "/ExpenditureSubsidiaryCategory/GetExpenditureSubsidiaryCategoryList?expenditureSubCategoryId=", "ExpenditureSubCategoryId", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpenditureSubsidiaryCategoryId, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label class="control-label   mendatory">Company</label>
                        @Html.SimpleDropDownFor(model => model.CompanyId, "/APanel/Company/GetCompanyList/", new { @class = "form-control", disabled = false })
                        @Html.HiddenFor(model => model.CompanyId)
                        @Html.ValidationMessageFor(model => model.CompanyId, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-3">
                    <div class="form-group">
                        <label class="control-label   mendatory" title="Expenditure Category">Ex.Category</label>
                        @Html.SimpleDropDownFor(model => model.ExpenditureCategoryId, "/APanel/ExpenditureCategory/GetExpenditureCategoryList/", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpenditureCategoryId, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label class="control-label   " title="Expenditure SubCategory">SubCategory</label>
                        @Html.CascadingDropDownFor(model => model.ExpenditureSubCategoryId, "/ExpenditureSubCategory/GetExpenditureSubCategoryList?expenditureCategoryId=", "ExpenditureCategoryId", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpenditureSubCategoryId, null, new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label   mendatory">Branch</label>
                        @Html.CascadingDropDownFor(model => model.BranchId, "/APanel/Branch/GetBranchList/", "CompanyId", new { @class = "form-control", disabled = false })
                        @Html.HiddenFor(model => model.BranchId)
                        @Html.ValidationMessageFor(model => model.BranchId, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpenseName, new { title = "Expense Name", @class = "control-label   mendatory" })
                        @Html.TextBoxFor(model => model.ExpenseName, new { @class = "form-control", placeholder = "Expense name" })
                        @Html.ValidationMessageFor(model => model.ExpenseName, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpenseDate, new { title = "Expense Date", @class = "control-label   mendatory" })
                        @Html.DatePickerFor(model => model.ExpenseDate, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpenseDate, null, new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpenseAmount, new { title = "Expense Amount", @class = "control-label   mendatory" })
                        @Html.TextBoxFor(model => model.ExpenseAmount, new { @class = "form-control", Value = String.Format("{0:0.00}", Model.ExpenseAmount), onclick = "this.select()" })
                        @Html.ValidationMessageFor(model => model.ExpenseAmount, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comment, new { @class = "control-label  " })
                        @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", placeholder = "Write something ......" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, new { @class = "control-label  " })
                        <label>
                            @Html.CheckBoxFor(model => model.Active)
                        </label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group input-group">
                        <button type="submit" class="btn btn-success offset-11 col-1"><i class="fa fa-save"></i> Save </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {

    });
</script>
}
